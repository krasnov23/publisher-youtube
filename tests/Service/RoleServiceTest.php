<?php

namespace App\Tests\Service;

use App\Entity\UserApi;
use App\Repository\UserApiRepository;
use App\Service\RoleService;
use Doctrine\ORM\EntityManagerInterface;
use JetBrains\PhpStorm\Pure;
use PHPUnit\Framework\TestCase;

class RoleServiceTest extends TestCase
{
    private UserApiRepository $userRepository;

    private EntityManagerInterface $em;

    private UserApi $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = new UserApi();

        $this->userRepository = $this->createMock(UserApiRepository::class);

        $this->userRepository->expects($this->once())
            ->method('getUser')
            ->with(1)
            ->willReturn($this->user);

        $this->em = $this->createMock(EntityManagerInterface::class);
        $this->em->expects($this->once())
            ->method('flush');

    }

    #[Pure]
    private function createService(): RoleService
    {
        return new RoleService($this->userRepository,$this->em);
    }

    public function testGrantAdmin(): void
    {
        $this->createService()->grandAdmin(1);
        $this->assertEquals(['ROLE_ADMIN','ROLE_USER'],$this->user->getRoles());
    }

    public function testGrantAuthor(): void
    {
        $this->createService()->grandAuthor(1);
        $this->assertEquals(['ROLE_AUTHOR','ROLE_USER'],$this->user->getRoles());
    }

}
