1. Установка пакет для юнит теста. composer require -w --dev phpunit/phpunit:^9.5 symfony/test-pack (или просто симфони тестпак)
2. Навести на Наш сервис в данном случае BookCategoryService нажать правой кнопкой мыши -> showcontextActions -> makeUnitTests

Мы пишем два вида тестов первый это юнит тесты, то есть какая-то отдельная его часть. сейчас мы хотим проверить работу
и репозиторий и сервис и контроллер, то есть что все части вместе работают корректно. Вместо TestCase наследуем
WebTestCase. Этот базовый класс предоставляет нам хттп клиент на наше ядро и позволяет нам делать хттп запросы, но по факту
никакого взаимодействия не происходит, т.к для отправки запросов нам не приходится поднимать сервер. Мы говорим ему запрос этот запрос
уходит напрямую в ядро. Для того чтобы привести json текст в удобный формат ctrl+alt+l
1. Создали тест расположение tests/Controller/BookCategoryServiceTest при запуске (php bin/phpunit tests/Controller),
тест был провален, это потому что появился .env.test в который мы должны прописать нашу базу данных (DATABASE_URL),
обычно для тестирования с использованием базы данных нужна отдельная база, но пока подойдет и та что у нас есть.
2. Еще один файл нам нужно изменить - config/packages/doctrine.yaml, закомментировать dbname suffix
(строка отвечающая за то чтобы тесты ходили в другую базу данных, на данном этапе нам это не нужно). (тест проходит далее успешно)


--- Работа со слагерами ---
Как создать документацию под api удобным путем? И актуализировать документацию прямо из кода
1. Подключаем доктин аннотации (composer require doctrine/annotations), поскольку не все умеют работать с атрибутами.
2. Подключаем нелмио бандл. ( composer require nelmio/api-doc-bundle, в вопросе Do you want to execute this recipe? -y  )
3. config->packages->nelmio_api_doc.yaml, строка path_patterns влияет на то какие роуты у нас попадут в документацию,
по умолчанию туда попадает еще и служебный роут который будет отдавать описание в json формате нам это не нужно, убираем это.
можно указать один из наших роутов вместо него или часть роута (Например: ^/api/v1)
4. Заходим в config->routes->nelmio_api_doc.yaml (Устанавливаем composer require twig asset,
Расскоментируем строки которые ниже строчки установки твиг)
5. Пишем первую аннотацию у нашего контроллера.
